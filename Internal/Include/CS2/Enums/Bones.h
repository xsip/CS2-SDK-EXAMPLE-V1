#pragma once
#include <unordered_map>
#include <string>
#include <string>
#include <array>

namespace CS2 {



    enum Bones : int {
        BONE_PELVIS = 0,
        BONE_SPINE_0,
        BONE_SPINE_1,
        BONE_SPINE_2,
        BONE_SPINE_3,
        BONE_NECK_0,
        BONE_HEAD_0,
        BONE_EYEBALL_L,
        BONE_EYEBALL_R,
        BONE_EYE_TARGET,
        BONE_HEAD_0_TWIST,
        BONE_CLAVICLE_L,
        BONE_ARM_UPPER_L,
        BONE_ARM_LOWER_L,
        BONE_HAND_L,
        BONE_FINGER_MIDDLE_META_L,
        BONE_FINGER_MIDDLE_0_L,
        BONE_FINGER_MIDDLE_1_L,
        BONE_FINGER_MIDDLE_2_L,
        BONE_FINGER_PINKY_META_L,
        BONE_FINGER_PINKY_0_L,
        BONE_FINGER_PINKY_1_L,
        BONE_FINGER_PINKY_2_L,
        BONE_FINGER_INDEX_META_L,
        BONE_FINGER_INDEX_0_L,
        BONE_FINGER_INDEX_1_L,
        BONE_FINGER_INDEX_2_L,
        BONE_FINGER_THUMB_0_L,
        BONE_FINGER_THUMB_1_L,
        BONE_FINGER_THUMB_2_L,
        BONE_FINGER_RING_META_L,
        BONE_FINGER_RING_0_L,
        BONE_FINGER_RING_1_L,
        BONE_FINGER_RING_2_L,
        BONE_WEAPON_HAND_L,
        BONE_ARM_LOWER_L_TWIST,
        BONE_ARM_LOWER_L_TWIST1,
        BONE_ARM_UPPER_L_TWIST1,
        BONE_ARM_UPPER_L_TWIST,
        BONE_PECT_L_AIMAT,
        BONE_SCAPULA_L,
        BONE_CLAVICLE_R,
        BONE_ARM_UPPER_R,
        BONE_ARM_LOWER_R,
        BONE_HAND_R,
        BONE_FINGER_MIDDLE_META_R,
        BONE_FINGER_MIDDLE_0_R,
        BONE_FINGER_MIDDLE_1_R,
        BONE_FINGER_MIDDLE_2_R,
        BONE_FINGER_PINKY_META_R,
        BONE_FINGER_PINKY_0_R,
        BONE_FINGER_PINKY_1_R,
        BONE_FINGER_PINKY_2_R,
        BONE_FINGER_INDEX_META_R,
        BONE_FINGER_INDEX_0_R,
        BONE_FINGER_INDEX_1_R,
        BONE_FINGER_INDEX_2_R,
        BONE_FINGER_THUMB_0_R,
        BONE_FINGER_THUMB_1_R,
        BONE_FINGER_THUMB_2_R,
        BONE_FINGER_RING_META_R,
        BONE_FINGER_RING_0_R,
        BONE_FINGER_RING_1_R,
        BONE_FINGER_RING_2_R,
        BONE_WEAPON_HAND_R,
        BONE_ARM_LOWER_R_TWIST,
        BONE_ARM_LOWER_R_TWIST1,
        BONE_ARM_UPPER_R_TWIST1,
        BONE_ARM_UPPER_R_TWIST,
        BONE_PECT_R_AIMAT,
        BONE_SCAPULA_R,
        BONE_JIGGLE_PRIMARY,
        BONE_PECT_L_AIMUP,
        BONE_PECT_R_AIMUP,
        BONE_SCAP_AIMUP,
        BONE_CHESTHIER_OFFSET,
        BONE_WEAPONHIER_JNT,
        BONE_WEAPONHIER_R_IKTARGET,
        BONE_WEAPONHIER_L_IKTARGET,
        BONE_PECTAIM_L,
        BONE_PECTTRANS_L,
        BONE_PECTAIM_R,
        BONE_PECTTRANS_R,
        BONE_SCAP_R_AIMAT,
        BONE_SCAP_L_AIMAT,
        BONE_PECT_L_PTBASE,
        BONE_PECT_R_PTBASE,
        BONE_LEG_UPPER_L,
        BONE_LEG_LOWER_L,
        BONE_ANKLE_L,
        BONE_BALL_L,
        BONE_LEG_UPPER_L_TWIST,
        BONE_LEG_UPPER_L_TWIST1,
        BONE_LEG_UPPER_R,
        BONE_LEG_LOWER_R,
        BONE_ANKLE_R,
        BONE_BALL_R,
        BONE_LEG_UPPER_R_TWIST,
        BONE_LEG_UPPER_R_TWIST1,
        BONE_ROOT_MOTION,
        BONE_LEG_L_OFFSET,
        BONE_LEG_L_IKTARGET,
        BONE_LEG_R_OFFSET,
        BONE_LEG_R_IKTARGET,
        BONE_COUNT // = 104
    };

    constexpr std::array<const char*, BONE_COUNT> BoneNames{
        "BONE_PELVIS",
        "BONE_SPINE_0",
        "BONE_SPINE_1",
        "BONE_SPINE_2",
        "BONE_SPINE_3",
        "BONE_NECK_0",
        "BONE_HEAD_0",
        "BONE_EYEBALL_L",
        "BONE_EYEBALL_R",
        "BONE_EYE_TARGET",
        "BONE_HEAD_0_TWIST",
        "BONE_CLAVICLE_L",
        "BONE_ARM_UPPER_L",
        "BONE_ARM_LOWER_L",
        "BONE_HAND_L",
        "BONE_FINGER_MIDDLE_META_L",
        "BONE_FINGER_MIDDLE_0_L",
        "BONE_FINGER_MIDDLE_1_L",
        "BONE_FINGER_MIDDLE_2_L",
        "BONE_FINGER_PINKY_META_L",
        "BONE_FINGER_PINKY_0_L",
        "BONE_FINGER_PINKY_1_L",
        "BONE_FINGER_PINKY_2_L",
        "BONE_FINGER_INDEX_META_L",
        "BONE_FINGER_INDEX_0_L",
        "BONE_FINGER_INDEX_1_L",
        "BONE_FINGER_INDEX_2_L",
        "BONE_FINGER_THUMB_0_L",
        "BONE_FINGER_THUMB_1_L",
        "BONE_FINGER_THUMB_2_L",
        "BONE_FINGER_RING_META_L",
        "BONE_FINGER_RING_0_L",
        "BONE_FINGER_RING_1_L",
        "BONE_FINGER_RING_2_L",
        "BONE_WEAPON_HAND_L",
        "BONE_ARM_LOWER_L_TWIST",
        "BONE_ARM_LOWER_L_TWIST1",
        "BONE_ARM_UPPER_L_TWIST1",
        "BONE_ARM_UPPER_L_TWIST",
        "BONE_PECT_L_AIMAT",
        "BONE_SCAPULA_L",
        "BONE_CLAVICLE_R",
        "BONE_ARM_UPPER_R",
        "BONE_ARM_LOWER_R",
        "BONE_HAND_R",
        "BONE_FINGER_MIDDLE_META_R",
        "BONE_FINGER_MIDDLE_0_R",
        "BONE_FINGER_MIDDLE_1_R",
        "BONE_FINGER_MIDDLE_2_R",
        "BONE_FINGER_PINKY_META_R",
        "BONE_FINGER_PINKY_0_R",
        "BONE_FINGER_PINKY_1_R",
        "BONE_FINGER_PINKY_2_R",
        "BONE_FINGER_INDEX_META_R",
        "BONE_FINGER_INDEX_0_R",
        "BONE_FINGER_INDEX_1_R",
        "BONE_FINGER_INDEX_2_R",
        "BONE_FINGER_THUMB_0_R",
        "BONE_FINGER_THUMB_1_R",
        "BONE_FINGER_THUMB_2_R",
        "BONE_FINGER_RING_META_R",
        "BONE_FINGER_RING_0_R",
        "BONE_FINGER_RING_1_R",
        "BONE_FINGER_RING_2_R",
        "BONE_WEAPON_HAND_R",
        "BONE_ARM_LOWER_R_TWIST",
        "BONE_ARM_LOWER_R_TWIST1",
        "BONE_ARM_UPPER_R_TWIST1",
        "BONE_ARM_UPPER_R_TWIST",
        "BONE_PECT_R_AIMAT",
        "BONE_SCAPULA_R",
        "BONE_JIGGLE_PRIMARY",
        "BONE_PECT_L_AIMUP",
        "BONE_PECT_R_AIMUP",
        "BONE_SCAP_AIMUP",
        "BONE_CHESTHIER_OFFSET",
        "BONE_WEAPONHIER_JNT",
        "BONE_WEAPONHIER_R_IKTARGET",
        "BONE_WEAPONHIER_L_IKTARGET",
        "BONE_PECTAIM_L",
        "BONE_PECTTRANS_L",
        "BONE_PECTAIM_R",
        "BONE_PECTTRANS_R",
        "BONE_SCAP_R_AIMAT",
        "BONE_SCAP_L_AIMAT",
        "BONE_PECT_L_PTBASE",
        "BONE_PECT_R_PTBASE",
        "BONE_LEG_UPPER_L",
        "BONE_LEG_LOWER_L",
        "BONE_ANKLE_L",
        "BONE_BALL_L",
        "BONE_LEG_UPPER_L_TWIST",
        "BONE_LEG_UPPER_L_TWIST1",
        "BONE_LEG_UPPER_R",
        "BONE_LEG_LOWER_R",
        "BONE_ANKLE_R",
        "BONE_BALL_R",
        "BONE_LEG_UPPER_R_TWIST",
        "BONE_LEG_UPPER_R_TWIST1",
        "BONE_ROOT_MOTION",
        "BONE_LEG_L_OFFSET",
        "BONE_LEG_L_IKTARGET",
        "BONE_LEG_R_OFFSET",
        "BONE_LEG_R_IKTARGET"
    };

    constexpr const char* GetBoneName(Bones bone) {
        int index = static_cast<int>(bone);
        if (index >= 0 && index < BONE_COUNT)
            return BoneNames[index];
        return "UNKNOWN_BONE";
    }



    inline static Bones BoneNameToEnum(const std::string& name) {
        static const std::unordered_map<std::string, Bones> boneMap = {
            {"pelvis", BONE_PELVIS},
            {"spine_0", BONE_SPINE_0},
            {"spine_1", BONE_SPINE_1},
            {"spine_2", BONE_SPINE_2},
            {"spine_3", BONE_SPINE_3},
            {"neck_0", BONE_NECK_0},
            {"head_0", BONE_HEAD_0},
            {"eyeball_l", BONE_EYEBALL_L},
            {"eyeball_r", BONE_EYEBALL_R},
            {"eye_target", BONE_EYE_TARGET},
            {"head_0_twist", BONE_HEAD_0_TWIST},
            {"clavicle_l", BONE_CLAVICLE_L},
            {"arm_upper_l", BONE_ARM_UPPER_L},
            {"arm_lower_l", BONE_ARM_LOWER_L},
            {"hand_l", BONE_HAND_L},
            {"finger_middle_meta_l", BONE_FINGER_MIDDLE_META_L},
            {"finger_middle_0_l", BONE_FINGER_MIDDLE_0_L},
            {"finger_middle_1_l", BONE_FINGER_MIDDLE_1_L},
            {"finger_middle_2_l", BONE_FINGER_MIDDLE_2_L},
            {"finger_pinky_meta_l", BONE_FINGER_PINKY_META_L},
            {"finger_pinky_0_l", BONE_FINGER_PINKY_0_L},
            {"finger_pinky_1_l", BONE_FINGER_PINKY_1_L},
            {"finger_pinky_2_l", BONE_FINGER_PINKY_2_L},
            {"finger_index_meta_l", BONE_FINGER_INDEX_META_L},
            {"finger_index_0_l", BONE_FINGER_INDEX_0_L},
            {"finger_index_1_l", BONE_FINGER_INDEX_1_L},
            {"finger_index_2_l", BONE_FINGER_INDEX_2_L},
            {"finger_thumb_0_l", BONE_FINGER_THUMB_0_L},
            {"finger_thumb_1_l", BONE_FINGER_THUMB_1_L},
            {"finger_thumb_2_l", BONE_FINGER_THUMB_2_L},
            {"finger_ring_meta_l", BONE_FINGER_RING_META_L},
            {"finger_ring_0_l", BONE_FINGER_RING_0_L},
            {"finger_ring_1_l", BONE_FINGER_RING_1_L},
            {"finger_ring_2_l", BONE_FINGER_RING_2_L},
            {"weapon_hand_l", BONE_WEAPON_HAND_L},
            {"arm_lower_l_twist", BONE_ARM_LOWER_L_TWIST},
            {"arm_lower_l_twist1", BONE_ARM_LOWER_L_TWIST1},
            {"arm_upper_l_twist1", BONE_ARM_UPPER_L_TWIST1},
            {"arm_upper_l_twist", BONE_ARM_UPPER_L_TWIST},
            {"pect_l_aimat", BONE_PECT_L_AIMAT},
            {"scapula_l", BONE_SCAPULA_L},
            {"clavicle_r", BONE_CLAVICLE_R},
            {"arm_upper_r", BONE_ARM_UPPER_R},
            {"arm_lower_r", BONE_ARM_LOWER_R},
            {"hand_r", BONE_HAND_R},
            {"finger_middle_meta_r", BONE_FINGER_MIDDLE_META_R},
            {"finger_middle_0_r", BONE_FINGER_MIDDLE_0_R},
            {"finger_middle_1_r", BONE_FINGER_MIDDLE_1_R},
            {"finger_middle_2_r", BONE_FINGER_MIDDLE_2_R},
            {"finger_pinky_meta_r", BONE_FINGER_PINKY_META_R},
            {"finger_pinky_0_r", BONE_FINGER_PINKY_0_R},
            {"finger_pinky_1_r", BONE_FINGER_PINKY_1_R},
            {"finger_pinky_2_r", BONE_FINGER_PINKY_2_R},
            {"finger_index_meta_r", BONE_FINGER_INDEX_META_R},
            {"finger_index_0_r", BONE_FINGER_INDEX_0_R},
            {"finger_index_1_r", BONE_FINGER_INDEX_1_R},
            {"finger_index_2_r", BONE_FINGER_INDEX_2_R},
            {"finger_thumb_0_r", BONE_FINGER_THUMB_0_R},
            {"finger_thumb_1_r", BONE_FINGER_THUMB_1_R},
            {"finger_thumb_2_r", BONE_FINGER_THUMB_2_R},
            {"finger_ring_meta_r", BONE_FINGER_RING_META_R},
            {"finger_ring_0_r", BONE_FINGER_RING_0_R},
            {"finger_ring_1_r", BONE_FINGER_RING_1_R},
            {"finger_ring_2_r", BONE_FINGER_RING_2_R},
            {"weapon_hand_r", BONE_WEAPON_HAND_R},
            {"arm_lower_r_twist", BONE_ARM_LOWER_R_TWIST},
            {"arm_lower_r_twist1", BONE_ARM_LOWER_R_TWIST1},
            {"arm_upper_r_twist1", BONE_ARM_UPPER_R_TWIST1},
            {"arm_upper_r_twist", BONE_ARM_UPPER_R_TWIST},
            {"pect_r_aimat", BONE_PECT_R_AIMAT},
            {"scapula_r", BONE_SCAPULA_R},
            {"jiggle_primary", BONE_JIGGLE_PRIMARY},
            {"pect_l_aimup", BONE_PECT_L_AIMUP},
            {"pect_r_aimup", BONE_PECT_R_AIMUP},
            {"scap_aimup", BONE_SCAP_AIMUP},
            {"chesthier_offset", BONE_CHESTHIER_OFFSET},
            {"weaponhier_jnt", BONE_WEAPONHIER_JNT},
            {"weaponhier_r_iktarget", BONE_WEAPONHIER_R_IKTARGET},
            {"weaponhier_l_iktarget", BONE_WEAPONHIER_L_IKTARGET},
            {"pectaim_l", BONE_PECTAIM_L},
            {"pecttrans_l", BONE_PECTTRANS_L},
            {"pectaim_r", BONE_PECTAIM_R},
            {"pecttrans_r", BONE_PECTTRANS_R},
            {"scap_r_aimat", BONE_SCAP_R_AIMAT},
            {"scap_l_aimat", BONE_SCAP_L_AIMAT},
            {"pect_l_ptbase", BONE_PECT_L_PTBASE},
            {"pect_r_ptbase", BONE_PECT_R_PTBASE},
            {"leg_upper_l", BONE_LEG_UPPER_L},
            {"leg_lower_l", BONE_LEG_LOWER_L},
            {"ankle_l", BONE_ANKLE_L},
            {"ball_l", BONE_BALL_L},
            {"leg_upper_l_twist", BONE_LEG_UPPER_L_TWIST},
            {"leg_upper_l_twist1", BONE_LEG_UPPER_L_TWIST1},
            {"leg_upper_r", BONE_LEG_UPPER_R},
            {"leg_lower_r", BONE_LEG_LOWER_R},
            {"ankle_r", BONE_ANKLE_R},
            {"ball_r", BONE_BALL_R},
            {"leg_upper_r_twist", BONE_LEG_UPPER_R_TWIST},
            {"leg_upper_r_twist1", BONE_LEG_UPPER_R_TWIST1},
            {"root_motion", BONE_ROOT_MOTION},
            {"leg_l_offset", BONE_LEG_L_OFFSET},
            {"leg_l_iktarget", BONE_LEG_L_IKTARGET},
            {"leg_r_offset", BONE_LEG_R_OFFSET},
            {"leg_r_iktarget", BONE_LEG_R_IKTARGET}
        };


        auto it = boneMap.find(name);
        return it != boneMap.end() ? it->second : BONE_COUNT;
    }
}